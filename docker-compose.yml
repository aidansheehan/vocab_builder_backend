version: '3.8'
services:
  traefik:
    image: traefik:2.1
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
  vocab-builder:
    container_name: vocab-builder
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      MONGODB_DATABASE_NAME: ${MONGODB_DATABASE_NAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      ACCESS_TOKEN_PRIVATE_KEY: ${ACCESS_TOKEN_PRIVATE_KEY}
      ACCESS_TOKEN_PUBLIC_KEY: ${ACCESS_TOKEN_PUBLIC_KEY}
    env_file:
      - ./.env
    ports:
      - '8000:8000'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.my-app.rule=Host(`dictaglot.com`)'
      - 'traefik.http.routers.my-app.tls=true'
      - 'traefik.http.routers.my-app.tls.certresolver=lets-encrypt'
    depends_on:
      redis:
        condition: service_started
      mongo:
        condition: service_started
  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE_NAME}
    env_file:
      - ./.env
    volumes:
      - mongo:/data/db
    ports:
      - '6000:27017'
    command:
      - mongod
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis:/data
volumes:
  mongo:
  redis: